{"ast":null,"code":"var _jsxFileName = \"/Users/ok/Documents/OK/Project/mongotest/frontend/src/pages/updateProduct/updateProduct.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/api/products/${id}`);\n        if (!response.ok) throw new Error(\"Failed to fetch product\");\n        const data = await response.json();\n        setProduct(data);\n      } catch (error) {\n        setError(error.message);\n        console.error(\"Error fetching product:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProduct();\n  }, [id]);\n  const handleChange = e => {\n    setProduct({\n      ...product,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5001/api/products/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(product)\n      });\n      if (!response.ok) throw new Error(\"Failed to update product\");\n      alert(\"Product updated successfully!\");\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Error updating product: \" + error.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading product data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 21\n  }, this);\n  if (!product) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error loading product data.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.keys(product).map(key => {\n        // _id 필드는 수정하지 않으므로 표시 X\n        if (key === \"_id\") return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: key === \"quantity\" ? \"number\" : key === \"expirationDate\" ? \"date\" : \"text\",\n            id: key,\n            name: key\n            // 날짜 필드는 \"YYYY-MM-DD\" 형태로 변환\n            ,\n            value: key === \"expirationDate\" ? product.expirationDate ? new Date(product.expirationDate).toISOString().slice(0, 10) : \"\" : product[key] || \"\",\n            onChange: handleChange,\n            required: true\n            // createdAt, updatedAt은 readOnly로 설정\n            ,\n            readOnly: key === \"createdAt\" || key === \"updatedAt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"MlhkRI+5gRNO6zTc0As0D30AT9E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","jsxDEV","_jsxDEV","UpdateProduct","_s","id","navigate","product","setProduct","loading","setLoading","error","setError","fetchProduct","response","fetch","ok","Error","data","json","message","console","handleChange","e","target","name","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","charAt","toUpperCase","slice","type","expirationDate","Date","toISOString","onChange","required","readOnly","_c","$RefreshReg$"],"sources":["/Users/ok/Documents/OK/Project/mongotest/frontend/src/pages/updateProduct/updateProduct.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst UpdateProduct = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5001/api/products/${id}`\n        );\n        if (!response.ok) throw new Error(\"Failed to fetch product\");\n\n        const data = await response.json();\n        setProduct(data);\n      } catch (error) {\n        setError(error.message);\n        console.error(\"Error fetching product:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProduct();\n  }, [id]);\n\n  const handleChange = (e) => {\n    setProduct({\n      ...product,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`http://localhost:5001/api/products/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(product),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to update product\");\n\n      alert(\"Product updated successfully!\");\n      navigate(\"/\");\n    } catch (error) {\n      alert(\"Error updating product: \" + error.message);\n    }\n  };\n\n  if (loading) return <p>Loading product data...</p>;\n  if (error) return <p>{error}</p>;\n  if (!product) return <p>Error loading product data.</p>;\n\n  return (\n    <div>\n      <h2>Update Product</h2>\n      <form onSubmit={handleSubmit}>\n        {Object.keys(product).map((key) => {\n          // _id 필드는 수정하지 않으므로 표시 X\n          if (key === \"_id\") return null;\n\n          return (\n            <div key={key}>\n              <label htmlFor={key}>\n                {key.charAt(0).toUpperCase() + key.slice(1)}:\n              </label>\n\n              <input\n                type={\n                  key === \"quantity\"\n                    ? \"number\"\n                    : key === \"expirationDate\"\n                    ? \"date\"\n                    : \"text\"\n                }\n                id={key}\n                name={key}\n                // 날짜 필드는 \"YYYY-MM-DD\" 형태로 변환\n                value={\n                  key === \"expirationDate\"\n                    ? product.expirationDate\n                      ? new Date(product.expirationDate)\n                          .toISOString()\n                          .slice(0, 10)\n                      : \"\"\n                    : product[key] || \"\"\n                }\n                onChange={handleChange}\n                required\n                // createdAt, updatedAt은 readOnly로 설정\n                readOnly={key === \"createdAt\" || key === \"updatedAt\"}\n              />\n            </div>\n          );\n        })}\n        <button type=\"submit\">Update Product</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateProduct;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}